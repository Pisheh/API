{"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/me/": {"get": {"tags": ["User profile"], "summary": "Get Me", "operationId": "get_me_me__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MyInfoSchema"}}}}}, "security": [{"JWT": ["me"]}]}, "put": {"tags": ["User profile"], "summary": "Update Profile", "operationId": "update_profile_me__put", "parameters": [{"required": true, "schema": {"title": "Sudo-Token", "type": "string"}, "name": "sudo-token", "in": "header"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateUserInfo"}}}, "required": true}, "responses": {"200": {"description": "user profile didn't changed and returned old profile", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MyInfoSchema"}}}}, "201": {"description": "updated user profile and returned new profile"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWT": ["me"]}, {"JWT": []}]}}, "/me/personlities": {"get": {"tags": ["User profile"], "summary": "Get Personlities", "operationId": "get_personlities_me_personlities_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Get Personlities Me Personlities Get", "type": "array", "items": {"$ref": "#/components/schemas/PersonalitySchema"}}}}}}, "security": [{"JWT": ["me", "seeker"]}]}}, "/guidances/search": {"get": {"tags": ["Guidance"], "summary": "Search Guides", "operationId": "search_guides_guidances_search_get", "parameters": [{"required": false, "schema": {"title": "Course", "type": "string"}, "name": "course", "in": "query"}, {"required": false, "schema": {"title": "Expertise", "type": "string"}, "name": "expertise", "in": "query"}, {"required": false, "schema": {"title": "Min Salary", "minimum": 1.0, "type": "integer"}, "name": "min_salary", "in": "query"}, {"required": false, "schema": {"title": "Max Salary", "minimum": 1.0, "type": "integer"}, "name": "max_salary", "in": "query"}, {"required": false, "schema": {"title": "Personality", "type": "string"}, "name": "personality", "in": "query"}, {"required": false, "schema": {"title": "Page", "minimum": 1.0, "type": "integer", "default": 1}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Per Page", "maximum": 100.0, "minimum": 1.0, "type": "integer", "default": 10}, "name": "per_page", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GuidesPage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWT": []}]}}, "/guidances/": {"get": {"tags": ["Guidance"], "summary": "Get Guides", "operationId": "get_guides_guidances__get", "parameters": [{"required": false, "schema": {"title": "Page", "minimum": 1.0, "type": "integer", "default": 1}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Per Page", "maximum": 100.0, "minimum": 1.0, "type": "integer", "default": 10}, "name": "per_page", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GuidesPage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/guidances/{slug}": {"get": {"tags": ["Guidance"], "summary": "Get Guide", "operationId": "get_guide_guidances__slug__get", "parameters": [{"required": true, "schema": {"title": "Slug", "type": "string"}, "name": "slug", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GuideSchema"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/jobs/": {"get": {"tags": ["Jobs"], "summary": "Get Jobs", "operationId": "get_jobs_jobs__get", "parameters": [{"required": false, "schema": {"title": "Page", "minimum": 1.0, "type": "integer", "default": 1}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Per Page", "maximum": 100.0, "minimum": 1.0, "type": "integer", "default": 10}, "name": "per_page", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobsPage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/jobs/{job_id}": {"get": {"tags": ["Jobs"], "summary": "Get Jobs", "operationId": "get_jobs_jobs__job_id__get", "parameters": [{"required": true, "schema": {"title": "The ID of the job to get", "minimum": 1.0, "type": "integer"}, "name": "job_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobSchema"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/category/search": {"get": {"tags": ["JobCategory"], "summary": "Get Categories", "operationId": "get_categories_category_search_get", "parameters": [{"required": false, "schema": {"title": "Course", "type": "string"}, "name": "course", "in": "query"}, {"required": false, "schema": {"title": "Expertise", "type": "string"}, "name": "expertise", "in": "query"}, {"required": false, "schema": {"title": "Min Salary", "minimum": 1.0, "type": "integer"}, "name": "min_salary", "in": "query"}, {"required": false, "schema": {"title": "Max Salary", "minimum": 1.0, "type": "integer"}, "name": "max_salary", "in": "query"}, {"required": false, "schema": {"title": "Personality", "type": "string"}, "name": "personality", "in": "query"}, {"required": false, "schema": {"title": "Page", "minimum": 1.0, "type": "integer", "default": 1}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Per Page", "maximum": 100.0, "minimum": 1.0, "type": "integer", "default": 10}, "name": "per_page", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CategoryPage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWT": []}]}}, "/category/{slug}/jobs": {"get": {"tags": ["JobCategory"], "summary": "Get Category Jobs", "operationId": "get_category_jobs_category__slug__jobs_get", "parameters": [{"required": true, "schema": {"title": "Slug", "type": "string"}, "name": "slug", "in": "path"}, {"required": false, "schema": {"title": "Page", "minimum": 1.0, "type": "integer", "default": 1}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Per Page", "maximum": 100.0, "minimum": 1.0, "type": "integer", "default": 10}, "name": "per_page", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobsPage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/category/{slug}": {"get": {"tags": ["JobCategory"], "summary": "Get Category", "operationId": "get_category_category__slug__get", "parameters": [{"required": true, "schema": {"title": "Slug", "type": "string"}, "name": "slug", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/literals/cities": {"get": {"tags": ["Literals"], "summary": "Get Cities", "operationId": "get_cities_literals_cities_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Get Cities Literals Cities Get", "type": "array", "items": {"type": "string"}}}}}}}}, "/literals/branches": {"get": {"tags": ["Literals"], "summary": "Get Branches", "operationId": "get_branches_literals_branches_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Get Branches Literals Branches Get", "type": "array", "items": {"$ref": "#/components/schemas/BranchInfo"}}}}}}}}, "/courses/{slug}": {"get": {"tags": ["Courses"], "summary": "Get Course", "operationId": "get_course_courses__slug__get", "parameters": [{"required": true, "schema": {"title": "Slug", "type": "string"}, "name": "slug", "in": "path"}], "responses": {"307": {"description": "Redirect to course link"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/users/employer/{id}": {"get": {"tags": ["Other users info"], "summary": "Get User Info", "operationId": "get_user_info_users_employer__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "string"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EmployerSchema"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/requests/new-request": {"post": {"tags": ["Job Request"], "summary": "New Request", "operationId": "new_request_requests_new_request_post", "parameters": [{"required": true, "schema": {"title": "Job Id", "type": "integer"}, "name": "job_id", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWT": ["seeker"]}]}}, "/requests/": {"get": {"tags": ["Job Request"], "summary": "Get Requests", "operationId": "get_requests_requests__get", "parameters": [{"required": false, "schema": {"title": "Page", "minimum": 1.0, "type": "integer", "default": 1}, "name": "page", "in": "query"}, {"required": false, "schema": {"title": "Per Page", "maximum": 50.0, "minimum": 1.0, "type": "integer", "default": 10}, "name": "per_page", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobRequestPage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWT": []}]}}, "/user": {"post": {"summary": "Check User", "operationId": "check_user_user_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserQuery"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserQueryResult"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/login": {"post": {"summary": "Login", "operationId": "login_login_post", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_login_login_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoginResult"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/sudo": {"post": {"summary": "Get Sudo Token", "operationId": "get_sudo_token_sudo_post", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_get_sudo_token_sudo_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SudoToken"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/token": {"post": {"summary": "Refresh Token", "operationId": "refresh_token_token_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_refresh_token_token_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/signup": {"post": {"summary": "Signup", "operationId": "signup_signup_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SignupInfo"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSchema"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Body_get_sudo_token_sudo_post": {"title": "Body_get_sudo_token_sudo_post", "required": ["username", "password"], "type": "object", "properties": {"grant_type": {"title": "Grant Type", "pattern": "password", "type": "string"}, "username": {"title": "Username", "type": "string"}, "password": {"title": "Password", "type": "string"}, "scope": {"title": "Scope", "type": "string", "default": ""}, "client_id": {"title": "Client Id", "type": "string"}, "client_secret": {"title": "Client Secret", "type": "string"}}}, "Body_login_login_post": {"title": "Body_login_login_post", "required": ["username", "password"], "type": "object", "properties": {"grant_type": {"title": "Grant Type", "pattern": "password", "type": "string"}, "username": {"title": "Username", "type": "string"}, "password": {"title": "Password", "type": "string"}, "scope": {"title": "Scope", "type": "string", "default": ""}, "client_id": {"title": "Client Id", "type": "string"}, "client_secret": {"title": "Client Secret", "type": "string"}}}, "Body_refresh_token_token_post": {"title": "Body_refresh_token_token_post", "required": ["token", "refresh_token"], "type": "object", "properties": {"token": {"title": "Token", "type": "string"}, "refresh_token": {"title": "Refresh Token", "type": "string"}}}, "BranchInfo": {"title": "BranchInfo", "required": ["branch", "expertise"], "type": "object", "properties": {"branch": {"title": "Branch", "type": "string"}, "expertise": {"title": "Expertise", "type": "array", "items": {"type": "string"}}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "CategoryPage": {"title": "CategoryPage", "required": ["meta", "categories"], "type": "object", "properties": {"meta": {"$ref": "#/components/schemas/PaginationMeta"}, "categories": {"title": "Categories", "type": "array", "items": {"$ref": "#/components/schemas/JobCategorySchema"}}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "CourseSchema": {"title": "CourseSchema", "required": ["slug", "title", "description", "link"], "type": "object", "properties": {"slug": {"title": "Slug", "type": "string"}, "title": {"title": "Title", "type": "string"}, "description": {"title": "Description", "type": "string"}, "link": {"title": "Link", "type": "string"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "EmployerInfo": {"title": "EmployerInfo", "required": ["id", "coName", "city"], "type": "object", "properties": {"id": {"title": "Id", "type": "string"}, "coName": {"title": "Coname", "type": "string"}, "city": {"title": "City", "type": "string"}, "avatar": {"title": "Avatar", "type": "string"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "EmployerSchema": {"title": "EmployerSchema", "required": ["coName", "coAddress", "coPhones", "coVerCode", "city"], "type": "object", "properties": {"coName": {"title": "Coname", "type": "string"}, "coAddress": {"title": "Coaddress", "type": "string"}, "coPhones": {"title": "Cophones", "type": "string"}, "coVerCode": {"title": "Covercode", "type": "string"}, "city": {"title": "City", "type": "string"}, "avatar": {"title": "Avatar", "type": "string"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "ExamInfo": {"title": "ExamInfo", "required": ["id", "title"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "title": {"title": "Title", "type": "string"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "GuideItem": {"title": "GuideItem", "required": ["slug", "title", "summary"], "type": "object", "properties": {"slug": {"title": "Slug", "type": "string"}, "title": {"title": "Title", "type": "string"}, "summary": {"title": "Summary", "type": "string"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "GuideSchema": {"title": "GuideSchema", "required": ["slug", "title", "summary", "basic", "category"], "type": "object", "properties": {"slug": {"title": "Slug", "type": "string"}, "title": {"title": "Title", "type": "string"}, "summary": {"title": "Summary", "type": "string"}, "basic": {"title": "Basic", "type": "string"}, "advanced": {"title": "Advanced", "type": "string"}, "category": {"$ref": "#/components/schemas/JobCategorySchema"}, "roadmap": {"title": "Roadmap", "type": "array", "items": {"$ref": "#/components/schemas/SkillsTimeline"}, "default": []}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "GuidesPage": {"title": "GuidesPage", "required": ["meta", "guides"], "type": "object", "properties": {"meta": {"$ref": "#/components/schemas/PaginationMeta"}, "guides": {"title": "Guides", "type": "array", "items": {"$ref": "#/components/schemas/GuideItem"}}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "JobCategorySchema": {"title": "JobCategorySchema", "required": ["slug", "title", "course", "expertise"], "type": "object", "properties": {"slug": {"title": "Slug", "type": "string"}, "title": {"title": "Title", "type": "string"}, "course": {"title": "Course", "type": "string"}, "expertise": {"title": "Expertise", "type": "string"}, "minSalary": {"title": "Minsalary", "type": "integer"}, "maxSalary": {"title": "Maxsalary", "type": "integer"}, "guides": {"title": "Guides", "type": "array", "items": {"$ref": "#/components/schemas/GuideItem"}, "default": []}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "JobRequestPage": {"title": "JobRequestPage", "required": ["meta", "requests"], "type": "object", "properties": {"meta": {"$ref": "#/components/schemas/PaginationMeta"}, "requests": {"title": "Requests", "type": "array", "items": {"$ref": "#/components/schemas/JobRequestSchema"}}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "JobRequestSchema": {"title": "JobRequestSchema", "required": ["id", "job", "seeker", "expireOn"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "job": {"$ref": "#/components/schemas/JobSchema"}, "seeker": {"$ref": "#/components/schemas/SeekerInfo"}, "expireOn": {"title": "Expireon", "type": "string", "format": "date-time"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "JobSchema": {"title": "JobSchema", "required": ["id", "title", "description", "createdOn", "employer", "requirements", "skills", "timedelta", "category", "type", "dayTime"], "type": "object", "properties": {"id": {"title": "Id", "minimum": 1.0, "type": "integer"}, "title": {"title": "Title", "type": "string"}, "description": {"title": "Description", "type": "string"}, "salary": {"$ref": "#/components/schemas/Salary"}, "createdOn": {"title": "Createdon", "type": "string", "format": "date-time"}, "employer": {"$ref": "#/components/schemas/EmployerInfo"}, "requirements": {"title": "Requirements", "type": "array", "items": {"type": "string"}}, "skills": {"title": "Skills", "type": "array", "items": {"$ref": "#/components/schemas/SkillItem"}}, "timedelta": {"$ref": "#/components/schemas/TimeDelta"}, "category": {"$ref": "#/components/schemas/JobCategorySchema"}, "type": {"title": "Type", "type": "string", "example": "\u062a\u0645\u0627\u0645 \u0648\u0642\u062a"}, "dayTime": {"title": "Daytime", "type": "string", "example": "\u0634\u0646\u0628\u0647 \u062a\u0627 \u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647 \u06f8 \u0627\u0644\u06cc \u06f1\u06f4"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "JobsPage": {"title": "JobsPage", "required": ["meta", "jobs"], "type": "object", "properties": {"meta": {"$ref": "#/components/schemas/PaginationMeta"}, "jobs": {"title": "Jobs", "type": "array", "items": {"$ref": "#/components/schemas/JobSchema"}}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "LoginResult": {"title": "LoginResult", "required": ["access_token", "refresh_token", "sudoToken", "userInfo"], "type": "object", "properties": {"access_token": {"title": "Access Token", "type": "string"}, "refresh_token": {"title": "Refresh Token", "type": "string"}, "sudoToken": {"title": "Sudotoken", "type": "string"}, "userInfo": {"$ref": "#/components/schemas/UserQueryResult"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "MyInfoSchema": {"title": "MyInfoSchema", "required": ["id", "email", "phoneNumber", "role"], "type": "object", "properties": {"id": {"title": "Id", "type": "string"}, "avatar": {"title": "Avatar", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "phoneNumber": {"title": "Phonenumber", "pattern": "^09\\d{9}$", "type": "string", "examples": ["09123456789"]}, "role": {"$ref": "#/components/schemas/Role"}, "employer": {"$ref": "#/components/schemas/EmployerInfo"}, "seeker": {"$ref": "#/components/schemas/SeekerInfo"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "PaginationMeta": {"title": "PaginationMeta", "required": ["totalCount", "pageCount", "currentPage", "perPage"], "type": "object", "properties": {"totalCount": {"title": "Totalcount", "exclusiveMinimum": 0.0, "type": "integer"}, "pageCount": {"title": "Pagecount", "exclusiveMinimum": 0.0, "type": "integer"}, "currentPage": {"title": "Currentpage", "exclusiveMinimum": 0.0, "type": "integer"}, "perPage": {"title": "Perpage", "exclusiveMinimum": 0.0, "type": "integer"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "PersonalitySchema": {"title": "PersonalitySchema", "required": ["slug", "test", "model"], "type": "object", "properties": {"slug": {"title": "Slug", "type": "string"}, "test": {"title": "Test", "type": "string"}, "model": {"title": "Model", "type": "string"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "Role": {"title": "Role", "enum": ["seeker", "employer"], "type": "string", "description": "An enumeration."}, "Salary": {"title": "Salary", "required": ["min", "max"], "type": "object", "properties": {"min": {"title": "Min", "type": "integer"}, "max": {"title": "Max", "type": "integer"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "SeekerInfo": {"title": "SeekerInfo", "required": ["firstname", "lastname"], "type": "object", "properties": {"firstname": {"title": "Firstname", "type": "string"}, "lastname": {"title": "Lastname", "type": "string"}, "skills": {"title": "Skills", "type": "array", "items": {"$ref": "#/components/schemas/SkillItem"}}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "SignupInfo": {"title": "SignupInfo", "required": ["password", "role"], "type": "object", "properties": {"password": {"title": "Password", "type": "string"}, "role": {"$ref": "#/components/schemas/Role"}, "employer": {"$ref": "#/components/schemas/EmployerInfo"}, "seeker": {"$ref": "#/components/schemas/SeekerInfo"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "SkillItem": {"title": "SkillItem", "required": ["slug"], "type": "object", "properties": {"slug": {"title": "Slug", "type": "string"}, "title": {"title": "Title", "type": "string"}, "description": {"title": "Description", "type": "string"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "SkillSchema": {"title": "SkillSchema", "required": ["slug", "title", "courses"], "type": "object", "properties": {"slug": {"title": "Slug", "type": "string"}, "title": {"title": "Title", "type": "string"}, "description": {"title": "Description", "type": "string"}, "courses": {"title": "Courses", "type": "array", "items": {"$ref": "#/components/schemas/CourseSchema"}}, "exam": {"$ref": "#/components/schemas/ExamInfo"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "SkillsTimeline": {"title": "SkillsTimeline", "required": ["title", "description", "skill", "index"], "type": "object", "properties": {"title": {"title": "Title", "type": "string"}, "description": {"title": "Description", "type": "string"}, "skill": {"$ref": "#/components/schemas/SkillSchema"}, "index": {"title": "Index", "type": "integer"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "SudoToken": {"title": "SudoToken", "required": ["sudoToken"], "type": "object", "properties": {"sudoToken": {"title": "Sudotoken", "type": "string"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "TimeDelta": {"title": "TimeDelta", "required": ["unit", "amount"], "type": "object", "properties": {"unit": {"title": "Unit", "enum": ["\u0645\u062f\u062a\u200c\u0647\u0627 \u067e\u06cc\u0634", "\u0628\u0647 \u062a\u0627\u0632\u06af\u06cc", "\u062f\u0642\u0627\u06cc\u0642\u06cc \u067e\u06cc\u0634", "\u0646\u06cc\u0645\u200c\u0633\u0627\u0639\u062a \u067e\u06cc\u0634", "\u062f\u0642\u06cc\u0642\u0647 \u067e\u06cc\u0634", "\u0633\u0627\u0639\u062a \u067e\u06cc\u0634", "\u0627\u0645\u0631\u0648\u0632", "\u062f\u06cc\u0631\u0648\u0632", "\u0631\u0648\u0632 \u067e\u06cc\u0634", "\u0647\u0641\u062a\u0647 \u0642\u0628\u0644", "\u0645\u0627\u0647 \u067e\u06cc\u0634"], "type": "string"}, "amount": {"title": "Amount", "minimum": 0.0, "type": "integer"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "UpdateEmployerInfo": {"title": "UpdateEmployerInfo", "required": ["coName", "city"], "type": "object", "properties": {"coName": {"title": "Coname", "type": "string"}, "city": {"title": "City", "type": "string"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "UpdateSeekerInfo": {"title": "UpdateSeekerInfo", "required": ["firstname", "lastname"], "type": "object", "properties": {"firstname": {"title": "Firstname", "type": "string"}, "lastname": {"title": "Lastname", "type": "string"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "UpdateUserInfo": {"title": "UpdateUserInfo", "required": ["email", "password", "passwordConfirm", "phoneNumber"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email"}, "password": {"title": "Password", "minLength": 8, "type": "string"}, "passwordConfirm": {"title": "Passwordconfirm", "minLength": 8, "type": "string"}, "phoneNumber": {"title": "Phonenumber", "pattern": "^09\\d{9}$", "type": "string", "examples": ["09123456789"]}, "employer": {"$ref": "#/components/schemas/UpdateEmployerInfo"}, "seeker": {"$ref": "#/components/schemas/UpdateSeekerInfo"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "UserQuery": {"title": "UserQuery", "required": ["username"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "examples": ["09123456721", "example21@example.com"]}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "UserQueryResult": {"title": "UserQueryResult", "required": ["role"], "type": "object", "properties": {"firstname": {"title": "Firstname", "type": "string"}, "lastname": {"title": "Lastname", "type": "string"}, "coName": {"title": "Coname", "type": "string"}, "role": {"$ref": "#/components/schemas/Role"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "UserSchema": {"title": "UserSchema", "required": ["id", "role"], "type": "object", "properties": {"id": {"title": "Id", "type": "string"}, "avatar": {"title": "Avatar", "type": "string"}, "role": {"$ref": "#/components/schemas/Role"}, "employer": {"$ref": "#/components/schemas/EmployerInfo"}, "seeker": {"$ref": "#/components/schemas/SeekerInfo"}}, "description": "Intended for use as a base class for externally-facing models.\n\nAny models that inherit from this class will:\n* accept fields using snake_case or camelCase keys\n* use camelCase keys in the generated OpenAPI spec\n* have orm_mode on by default\n    * Because of this, FastAPI will automatically attempt to parse returned orm instances into the model"}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}, "securitySchemes": {"JWT": {"type": "oauth2", "flows": {"password": {"scopes": {"employer": "Get access to employers panel", "seeker": "Get access to seekers panel", "me": "Read information about the current user", "admin": "have access to anything"}, "tokenUrl": "/login"}}}}}}